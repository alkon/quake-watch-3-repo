name: Verify & Sync via Argo CD

on:
  workflow_run:
    workflows: ["Publish Image & Chart to GHCR"]
    types:
      - completed

env:
  ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
  ARGOCD_APP:    ${{ secrets.ARGOCD_APP }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: publish

    steps:
      # ─── Restore your kubeconfig so `kubectl` can talk to the cluster ───────
      - name: Restore kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      # ─── Generate a short-lived Argo CD token inside the cluster ────────────
      - name: Create Argo CD SA token
        run: |
          echo "ARGOCD_TOKEN=$(kubectl -n argocd create token ci-argocd-sa --duration=1h)" \
            >> $GITHUB_ENV

      # ─── Install & verify the Argo CD CLI ───────────────────────────────────
      - name: Install argocd CLI
        run: |
          ARGOCD_VERSION=v2.9.12
          curl -sSL \
            -o argocd-linux-amd64 \
            https://github.com/argoproj/argo-cd/releases/download/${ARGOCD_VERSION}/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd
          argocd version --client

      # ─── Log in to your Argo CD server ──────────────────────────────────────
      - name: Login to Argo CD
        run: |
          argocd login $ARGOCD_SERVER \
            --token $ARGOCD_TOKEN \
            --insecure

      # ─── Trigger a GitOps sync & wait until it’s healthy ────────────────────
      - name: Sync & wait for healthy
        run: |
          argocd app sync  $ARGOCD_APP
          argocd app wait  $ARGOCD_APP --timeout 120
